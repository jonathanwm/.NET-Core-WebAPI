// <auto-generated />
using System;
using JWM.Clinic.AccessData.Entity.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace JWM.Clinic.AccessData.Entity.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20180830173442_MigrationInicial")]
    partial class MigrationInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("JWM.Clinic.Models.Animal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ANI_ID");

                    b.Property<int>("Age")
                        .HasColumnName("ANI_AGE");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnName("ANI_BREED")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("ANI_NAME")
                        .HasMaxLength(100);

                    b.Property<string>("NameOwner")
                        .IsRequired()
                        .HasColumnName("ANI_NAMEOWNER")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ANI_ANIMAL");
                });

            modelBuilder.Entity("JWM.Clinic.Models.Handbook", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HAND_ID");

                    b.Property<DateTime>("Date")
                        .HasColumnName("HAND_DATE");

                    b.Property<long>("IdAnimal")
                        .HasColumnName("ANI_ID");

                    b.Property<long>("IdVeterinary")
                        .HasColumnName("VET_ID");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnName("PRO_OBSERVATION")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IdAnimal");

                    b.HasIndex("IdVeterinary");

                    b.ToTable("HAND_HANDBOOK");
                });

            modelBuilder.Entity("JWM.Clinic.Models.Veterinary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VET_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("MED_NAME")
                        .HasMaxLength(100);

                    b.Property<long>("NumberCRV")
                        .HasColumnName("MED_NUMBERCRV");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnName("MED_SPECIALTY")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("VET_VETERINARY");
                });

            modelBuilder.Entity("JWM.Clinic.Models.Handbook", b =>
                {
                    b.HasOne("JWM.Clinic.Models.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("IdAnimal")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JWM.Clinic.Models.Veterinary", "Veterinary")
                        .WithMany()
                        .HasForeignKey("IdVeterinary")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
